name: Django Test with PostgreSQL Example

on:
    workflow_call:
    workflow_dispatch:
    push:
       branches: [main]
    pull_request:
        branches: [main]

jobs:
  simple_build:
    runs-on: ubuntu-latest
    env:
      MY_POSTGRES_USER: someuser
      MY_POSTGRES_PASSWORD: somepassword
      MY_POSTGRES_DB: somedbname
    services:
      postgres_main:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ env.MY_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.MY_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.MY_POSTGRES_DB }}
        ports:
          - 5432:5432
        options: &gt;-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
           python-version: 3.8
      - name: Install requirements
        run: |
            pip install -r requirements.txt
      - name: Run tests
        env:
          DEBUG: "0"
          DJANGO_SECRET_KEY: ${{ env.DJANGO_SECRET_KEY }}
          DB_USERNAME: ${{ env.MY_POSTGRES_USER }}
          DB_PASSWORD: ${{ env.MY_POSTGRES_PASSWORD }}
          DB_HOST: localhost
          DB_DATABASE: ${{ env.MY_POSTGRES_DB }}
          DB_PORT: 5432
        run: |
            python manage.py test
          
          

#name: Django CI
#
#on:
#  push:
#    branches: [ "main", "dev"]
#  pull_request:
#    branches: [ "main", "dev" ]
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    strategy:
#      max-parallel: 4
#      matrix:
#        python-version: [3.8]
#    services:
#      postgres:
#        image: postgres:11
#        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: postgres
#        ports:
#          - 5432:5432
#        # needed because the postgres container does not provide a healthcheck
#        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v3
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: psycopg2 prerequisites
#      run: sudo apt-get install libpq-dev
#    - name: Install Dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt
#    - name: Run Migrations
#      run: python manage.py migrate
#    - name: Run Tests
#      env:
#        DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
#      run: |
#        python manage.py test
